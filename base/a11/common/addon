#!/sbin/sh

#OUTFD=$1;

#echo "executing addon" >> $OUTFD

shift 1
destDir=$system/addon.d
NikGappsDir=$destDir
destDir=$NikGappsDir
dest=$destDir/50-$1".sh"
fileName=$1
shift 1
installSource=$1
deleteSource=$2
debloaterSource=$3
removeFromRomSource=$4
mkdir -p "$destDir"
TMPDIR=/dev/tmp
COMMONDIR=$TMPDIR/NikGappsScripts
if $BOOTMODE; then
  COMMONDIR=$MODPATH/NikGappsScripts
  mkdir -p $COMMONDIR
fi
addonDir="/sdcard/NikGapps/addonLogs"
nikGappsAddonLogFile="$addonDir/addonlogfiles/NikGapps_"$fileName"_addon.log"
nikGappsTestLog="$addonDir/logfiles/NikGapps.log"
newline='
'

echo_add_to_log() {
  echo ""
  echo "addToLog() {"
  echo "  mkdir -p \"\$(dirname $nikGappsAddonLogFile)\";"
  echo "  echo \"\$1\" >> $nikGappsAddonLogFile"
  echo "}"
  echo ""
  echo "addToLog \"Execute Log for $fileName with commands: \$@\""
}

list_files() {
  echo ""
  echo "list_files() {"
  echo "cat <<EOF"

  if [ -f "$installSource" ]; then
    OLD_IFS="$IFS"
    IFS="$(printf '%b_' ' \n')"
    IFS="${IFS%_}"
    g=$(grep "install" "$installSource" | cut -d= -f2)
    for i in $g; do
      echo "$i"
    done
    IFS="$OLD_IFS"
  fi

  echo "EOF"
  echo "}"
  echo ""
}

backup() {
  echo " backup)"
  echo "   ui_print \"- Backing up $fileName\""
  echo "   list_files | while read FILE DUMMY; do"
  echo "     backup_file \$S/\"\$FILE\""
  echo "   done"
  echo " ;;"
}

restore() {
  echo " restore)"
  echo "   ui_print \"- Restoring $fileName\""
  echo "   list_files | while read FILE REPLACEMENT; do"
  echo "     R=\"\""
  echo "     [ -n \"\$REPLACEMENT\" ] && R=\"\$S/\$REPLACEMENT\""
  echo "     [ -f \"\$C/\$S/\$FILE\" ] && restore_file \$S/\"\$FILE\" \"\$R\""
  echo "   done"
  delete_from_aosp
  delete_from_rom
  debloat_files
  echo "   for i in \$(list_files); do"
  if [ "$version" = 3 ]; then
    echo "     f=\$(get_output_path \"\$S/\$i\")"
    echo "     chown root:root \"\$f\""
    echo "     chmod 644 \"\$f\""
    echo "     chmod 755 \$(dirname \$f)"
  else
    echo "     chown root:root \"\$P/\$i\""
    echo "     chmod 644 \"\$P/\$i\""
    echo "     chmod 755 \"\$(dirname \"\$P/\$i\")\""
  fi
  echo "   done"
  echo " ;;"
}

delete_from_aosp() {
  echo "   addToLog \"Deleting Aosp apps in $fileName\""
  if [ -f "$deleteSource" ]; then
    OLD_IFS="$IFS"
    IFS="$(printf '%b_' ' \n')"
    IFS="${IFS%_}"
    g=$(grep "delete" "$deleteSource" | cut -d= -f2)
    for i in $g; do
      echo "   clean_recursive \"$i\""
    done
    IFS="$OLD_IFS"
  fi
}

delete_from_rom() {
  echo "   addToLog \"Removing Files from Rom Source in $fileName\""
  if [ -f "$removeFromRomSource" ]; then
    OLD_IFS="$IFS"
    IFS="$(printf '%b_' ' \n')"
    IFS="${IFS%_}"
    g=$(grep "delete" "$removeFromRomSource" | cut -d= -f2)
    for i in $g; do
      echo "   clean_recursive \"$i\""
    done
    IFS="$OLD_IFS"
  fi
}

debloat_files() {
  echo "   addToLog \"Running Debloater in $fileName\""
  if [ -f "$debloaterSource" ]; then
    OLD_IFS="$IFS"
    IFS="$(printf '%b_' ' \n')"
    IFS="${IFS%_}"
    g=$(grep "debloat" "$debloaterSource" | cut -d= -f2)
    for i in $g; do
      echo "   clean_recursive \"$i\""
    done
    IFS="$OLD_IFS"
  fi
}

run() {
  echo " "
  echo "if [ \"\$execute_config\" = \"0\" ]; then"
  echo "  if [ -f \"\$S/addon.d/50-$fileName.sh\" ]; then"
  echo "    ui_print \"- Deleting up $fileName.sh\""
  echo "    rm -rf \$S/addon.d/50-$fileName.sh"
  echo "    rm -rf \$T/addon.d/50-$fileName.sh"
  echo "  fi"
  echo "  exit 1"
  echo "fi"
  echo " "
  echo "if [ ! -f \"\$S/addon.d/\$fileName.sh\" ]; then"
  echo "  test \"\$execute_config\" = \"1\" && CopyFile \"\$0\" \"\$S/addon.d/\$fileName.sh\""
  echo "fi"
  echo " "
  echo "case \"\$1\" in"
  echo " pre-backup)"
  echo "   rm -rf \"$nikGappsAddonLogFile\""
  echo " ;;"
  backup
  echo " post-backup)"
  echo "   # Stub"
  echo " ;;"
  echo " pre-restore)"
  echo "   # Stub"
  echo " ;;"
  restore
  echo " post-restore)"
  echo " ;;"
  echo "esac"
}

# Read the config file from (Thanks to xXx @xda)
ReadConfigValue() {
  value=$(sed -e '/^[[:blank:]]*#/d;s/[\t\n\r ]//g;/^$/d' "$2" | grep "^$1=" | cut -d'=' -f 2)
  echo "$value"
  return $?
}

header() {
  echo "#!/sbin/sh"
  echo "#"
  echo "# ADDOND_VERSION=$version"
}

if [ -z "$nikgapps_config_file_name" ]; then
  version=3
else
  addon_version_config=$(ReadConfigValue "addon_version.d" "$nikgapps_config_file_name")
  [ -n "$addon_version_config" ] && version=$addon_version_config
  [ -z "$addon_version_config" ] && version=3
fi

rm -rf "$dest"
header > "$dest"
cat "$COMMONDIR/header" >> "$dest"
{
  echo_add_to_log
  cat "$COMMONDIR/functions"
  list_files
  run
} >>"$dest"
chmod 755 "$dest"
mkdir -p "$addon_scripts_logDir"
rm -rf "$addon_scripts_logDir/50-$fileName.sh"
cat "$dest" > "$addon_scripts_logDir/50-$fileName.sh"